
// This is the code for binary tree to circular doubly linkedlist using morris traversal //

Node bTreeToClist(Node root)
    {
        Node prev = null;
        Node head = null;
        Node curr = root;
        
        while(curr != null){
            if(curr.left == null){
                //print curr.data and go right
                if(prev == null){
                    head = curr;
                }
                else{
                    prev.right = curr;
                    curr.left = prev;
                }
                prev = curr;
                
                curr = curr.right;
            }
            else{
                //find predecessor
                Node predecessor = curr.left;
                while(predecessor.right != null && predecessor.right != curr){
                    predecessor = predecessor.right;
                }
                
                if(predecessor.right == null){
                    predecessor.right = curr;
                    curr = curr.left;
                }
                else{
                    predecessor.right = null;
                    //print curr.data and go right
                    if(prev == null){
                        head = curr;
                    }
                    else{
                        prev.right = curr;
                        curr.left = prev;
                    }
                    prev = curr;
                    //go right
                    curr = curr.right;
                }
            }
        }
        
        prev.right = head;
        head.left = prev;
        
        return head;
    }